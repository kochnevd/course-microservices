{
	"info": {
		"_postman_id": "8bc122a7-f18f-42f9-8d46-2be5cf70ce1b",
		"name": "Homework#2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Healthcheck",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/health",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"KoDA\", \"firstName\": \"Dmitriy\",\"lastName\": \"Kochnev\", \"email\": \"kochnevd@mail.ru\",\"phone\":\"-hidden--\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users (1 item in response)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonResponse = JSON.parse(responseBody);\r",
							"if (jsonResponse.length) {\r",
							"    pm.collectionVariables.set(\"userid\", jsonResponse[0][\"id\"])\r",
							"} else {\r",
							"    pm.collectionVariables.unset(\"userid\")\r",
							"}\r",
							"\r",
							"pm.test(\"Test for exactly one user in the user list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get first user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{userid}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update first user",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{userid}}, \"username\": \"KoDA\", \"firstName\": \"Dmitriy\",\"lastName\": \"Kochnev\", \"email\": \"kochnevd@mail.ru\",\"phone\":\"+79991111111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{userid}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"KoDA\", \"firstName\": \"Dmitriy\",\"lastName\": \"Kochnev\", \"email\": \"kochnevd@mail.ru\",\"phone\":\"-hidden-\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users (2 items in response)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Test for two users in the user list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(2);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete first user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{userid}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get first user (404 expected)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{userid}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users (1 item in response)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonResponse = JSON.parse(responseBody);\r",
							"if (jsonResponse.length) {\r",
							"    pm.collectionVariables.set(\"userid\", jsonResponse[0][\"id\"])\r",
							"} else {\r",
							"    pm.collectionVariables.unset(\"userid\")\r",
							"}\r",
							"\r",
							"pm.test(\"Test for again one user in the user list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.length).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete last user",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{userid}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"key": "userid",
			"value": ""
		}
	]
}